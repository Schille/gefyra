# This workflow will build a PyInstaller binary for linux when a tag is pushed

name: Build Linux binary

env:
  PYINSTALL_DOWNLOAD: https://github.com/pyinstaller/pyinstaller/archive/refs/tags/v4.9.zip

on:
  push:
    tags:
      - '*'


jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
        virtualenvs-path: client/.venv
    - name: Install dependencies
      working-directory: client/
      run: |
        poetry install --no-interaction --no-root --no-dev
    - name: Setup PyInstaller and build bootloader
      run: |
        source client/.venv/bin/activate
        sudo apt update
        sudo apt install -y build-essential zlib1g-dev
        pip install wheel
        wget ${PYINSTALL_DOWNLOAD}
        unzip v4.9.zip
        cd pyinstaller-4.9/bootloader/
        python ./waf all
        cd ..
        python setup.py install
    - name: PyInstaller build
      working-directory: client/
      run: |
        source .venv/bin/activate
        pyinstaller --onefile gefyra/__main__.py  --name gefyra
        echo "APP_VERSION=`poetry version -s`" >> $GITHUB_ENV
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: gefyra-${{ env.APP_VERSION }}-linux-amd64
        path: |
          client/dist/gefyra
          LICENSE
          client/README.md
        retention-days: 5