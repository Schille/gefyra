name: pytest and try it yourself example

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Pytest
      working-directory: ./client
      run: |
        poetry install
        poetry run coverage run -m pytest
    # Run the 'Try it yourself'
    - uses: AbsaOSS/k3d-action@v2
      name: Create Single Cluster
      with:
        cluster-name: "mycluster"
        args: >-
          --agents 1
          -p "31820:31820/UDP@agent:0"
    - name: Apply some workload
      run: |
        kubectl apply -f testing/workloads/hello.yaml
    - name: Run gefyra up
      working-directory: ./client
      run: |
        poetry run coverage run -a -m gefyra up
    - name: Build a docker file
      working-directory: testing/images/
      run: |
        docker build -f Dockerfile.local . -t pyserver
    - name: Run gefyra run
      working-directory: ./client
      run: |
        poetry run coverage run -a -m gefyra run -i pyserver -N mypyserver -n default
    - name: Run gefyra bridge
      working-directory: ./client
      run: |
        poetry run coverage run -a -m gefyra bridge -N mypyserver -n default --deployment hello-nginxdemo --port 80:8000 --container-name hello-nginx -I mypybridge
    - name: "Run gefyra list --bridges"
      working-directory: ./client
      run: |
        poetry run coverage run -a -m gefyra list --bridges
    - name: Run gefyra down
      working-directory: ./client
      run: |
        poetry run coverage run -a -m gefyra down
    - name: Show coverage report
      working-directory: ./client
      run: |
        poetry run coverage report
    - name: Upload coverage data to coveralls.io
      working-directory: ./client
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: |
        poetry run coveralls --service=github
  coveralls:
    name: Indicate completion to coveralls.io
    # need secrets.GITHUB_TOKEN
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}